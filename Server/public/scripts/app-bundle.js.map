{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/resources/index.js","src/modules/home.js","src/modules/list.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","globalResources","Home","users","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","console","log","List","todos","parse","getItem","showList","priorities","activate","getUserTodos","_id","createTodo","todoObj","todo","description","dateDue","Date","userId","priority","editTodo","saveTodo","alert","todoId","filesToUpload","length","uploadFile","deleteTodo","completeTodo","completed","toggleShowCompleted","showCompleted","changeFiles","Array","push","files","removeFile","index","splice","logout","removeItem","back","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","ToDos","TODO_SERVICE","todosArray","id","i","formData","FormData","forEach","item","append","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import{AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      { \n\troute: ['', 'home'],\n\t moduleId: './modules/home',\n\t name: 'Home' \n      },\n      {\n\t route: 'list',\n\t moduleId: './modules/list',\n   name: 'List', \n   auth: true\n\n     }\n    ]);\n  }\n}","var authConfig = {\n  baseUrl: \"http://localhost:5000/api\",\n  loginUrl: '/users/login',\n  tokenName: 'token',\n  authHeader: 'Authorization',\n  authToken: '',\n  logoutRedirect: '#/home'\n}\n\nexport default authConfig;\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\n\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport { Users } from '../resources/data/users';\nimport {AuthService} from 'aurelia-auth';\n\n\n\n@inject(Router, Users, AuthService)\nexport class Home {\n    constructor(router, users, auth) {\n        this.router = router;\n        this.auth = auth;\n        this.loginError = '';    \n        this.users = users;        \n        this.message = 'Home';\n        this.showLogin = true;\n    }\n\n    showRegister(){\n        this.user = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\"\n            }\n        this.registerError = \"\";\n        this.showLogin = false;\n    }\n\n    async save() {\n              let serverResponse = await this.users.save(this.user);\n              if (!serverResponse.error) {\n                this.showLogin = true;\n              } else {\n                this.registerError = \"There was a problem registering the user.\"\n              }\n        }\n\n        login() {\n            return this.auth.login(this.email, this.password)\n              .then(response => {\n            sessionStorage.setItem(\"user\", JSON.stringify(response.user));\n            this.loginError = \"\";\n            this.router.navigate('list');\n              })\n              .catch(error => {\n                console.log(error);\n                this.loginError = \"Invalid credentials.\";\n              });\n          };\n        \n\n  }\n  ","import {inject} from 'aurelia-framework';\nimport {ToDos} from '../resources/data/todos';\nimport {Router} from 'aurelia-router';\nimport {AuthService} from 'aurelia-auth';\n\n@inject(ToDos, Router, AuthService)\nexport class List {\n    constructor(todos, router, auth) {\n        this.router = router;\n        this.todos=todos;\n        this.auth = auth;\n        this.user = JSON.parse(sessionStorage.getItem('user'));\n        this.showList = true;\n        this.priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n    }\n    async activate(){\n\t\tawait this.todos.getUserTodos(this.user._id);\n\t}\n\n\n    createTodo(){\t\n\t\tthis.todoObj = {\n\t\t\ttodo: \"\",\n\t\t\tdescription: \"\",\n\t\t\tdateDue: new Date(),\n\t\t\t userId: this.user._id,\n\t\t\tpriority: this.priorities[0]\n\t\t}\n        this.showList = false;\n        \n\t\t\n    }\n\n    editTodo(todo){\n        this.todoObj = todo;\n        this. showList = false;\n    }\n    \n    async saveTodo(){\n                if(this.todoObj){       \n                    let response = await this.todos.save(this.todoObj);\n                    if(response.error){\n                        alert(\"There was an error creating the ToDo\");\n                    } else {\n                        var todoId = response._id;\n                        if(this.filesToUpload && this.filesToUpload.length){\n                            await this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\n                            this.filesToUpload = [];\n                        }\n                    }\n                    this.showList = true;\n                }\n            }\n        \n   \n\n    deleteTodo(todo){\n    this.todos.deleteTodo(todo._id);\n    }\n\n    completeTodo(todo){\n    todo.completed = !todo.completed;\n    this.todoObj = todo;\n    this.saveTodo();\n    }\n\n    toggleShowCompleted(){\n    this.showCompleted = !this.showCompleted;\n    }\n\n    changeFiles(){\n        this.filesToUpload = new Array(); \n        this.filesToUpload.push(this.files[0]);\n    }\n    \u000bremoveFile(index){\n        this.filesToUpload.splice(index,1);\n    }\n    \n\n    logout(){\n        sessionStorage.removeItem('user');\n        this.auth.logout();\n    }\n\n    back () {\n        this.showList = true;\n    }\n    \n  }\n  ","import { inject } from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n\tconstructor(http) {\n\t\tthis.httpClient = http;\n\t\tthis.BASE_URL = \"http://localhost:5000/api/\";\n\n\t\tthis.httpClient.configure(config => {\n\t\t\tconfig\n\t\t\t\t.withBaseUrl(this.BASE_URL)\n\t\t\t\t.withDefaults({\n\t\t\t\tcredentials: 'same-origin',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'X-Requested-With': 'Fetch'\n\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.withInterceptor({\n\t\t\t\trequest(request) {\n\t\t\t\t\tconsole.log(`Requesting ${request.method} ${request.url}`);\n\t\t\t\t\treturn request;\n\t\t\t\t},\n\t\t\t\tresponse(response) {\n\t\t\t\t\tconsole.log(`Received ${response.status} ${response.url}`);\n\t\t\t\t\treturn response;\n\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\tget(url) {\n\t\t\treturn this.httpClient.fetch(url)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\treturn data;\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treturn error;\n\t\t\t\t});\n\t\t}\n\n\tpost(content, url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'post',\n\t\t\t\tbody: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n\t}\n\n\tput(content, url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'put',\n\t\t\t\tbody: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n\t}\n\t\n\tdelete(url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'delete'\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error ;\n\t\t\t});\n\t}\n\n\tuploadFiles(files, url){\n\t\t    return this.httpClient\n\t\t    .fetch(url, {\n\t\t        method: 'post',\n\t\t        body: files\n\t\t    })\n\t\t    .then(response => response.json())\n\t\t    .then(object => {\n\t\t        return object;\n\t\t    })\n\t\t    .catch(error => {\n\t\t        return error;\n\t\t    });\n\t\t}\n\t\t\n\n\n\t}\n\n\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n\u000b@inject(DataServices)\nexport class ToDos {\n\n\u000b\tconstructor(data) {\n        \t\tthis.data = data;\n        \t\tthis.TODO_SERVICE = 'todos';\n                this.todosArray = [];\n\n   \t\t }\n\nasync getUserTodos(id){\n    let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\n    if(!response.error && !response.message){\n        this.todosArray = response;\n    }\n}\n\nasync save(todo){\n    if(todo){\n        if(!todo._id){\n            let response = await this.data.post(todo, this.TODO_SERVICE);\n            if(!response.error){\n                this.todosArray.push(response);\n            }\n            return response;\n        } else {\n            let response = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id);\n            if(!response.error){\n                // this.updateArray(response);\n            }\n            return response;\n        }\n\n    }\n}\n\nasync deleteTodo(id){\n    let response = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\n    if(!response.error){\n    for(let i = 0; i < this.todosArray.length; i++){\n    if(this.todosArray[i]._id === id){\n    this.todosArray.splice(i,1);\n    }\n    }\n    }\n    }\n\n    async uploadFile(files, userId, todoId){\n                let formData = new FormData();\n        \u000b        files.forEach((item, index) => {\n            formData.append(\"file\" + index, item);\n                });\n            \n            let response = await this.data.uploadFiles(formData, this.TODO_SERVICE + \"/upload/\" + userId + \"/\" + todoId);\n            return response;\n        }\n        \n\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Users {\n\nconstructor(data) {\n        this.data = data;\n\n        this.USER_SERVICE = 'users';\n    }\n\nasync save(user){\n    if(user){\n        try{\n            let serverResponse = await this.data.post(user, this.USER_SERVICE);\n            return serverResponse;\n         } catch (error) {\n            console.log(error);\n            return error;\n        }\n    }\n}\n\n}\n","import { inject, bindable, bindingMode } from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n@inject(Element)\nexport class FlatPickerCustomElement {\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\n    constructor(element) {\n        this.element = element;\n    }\n\n    bind() {\n        const defaultConfig = {\n            altInput: true,\n            altFormat: \"F j, Y\",\n            wrap: true\n        };\n        this._config = Object.assign({}, defaultConfig);\n        this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n    }\n\n    attached() {\n        this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n    }\n\n    onChange(selectedDates, dateStr, instance) {\n        this.value = selectedDates[0]\n    }\n    \n    valueChanged() {\n            if (!this.flatpickr) {\n                    return;\n            }\n        if (this.value === this.flatpickr.selectedDates[0]) {\n                    return;\n            }\n        let newDate = this.value ? this.value : undefined;\n        this.flatpickr.setDate(newDate);\n    }\n}\n","export class CompletedValueConverter {\n  \n   toView(array, value) {\n     if(!value){\n      return array.filter(item => {\n        return !item.completed;\n      })\n     } else {\n       return array;\n     }\n   }\n  }\n\n  \n","import moment from 'moment';\n\nexport class DateFormatValueConverter {\n\ntoView(value) {\nif(value === undefined || value === null){\nreturn;\n    \t}\n    \n    \treturn moment(value).format('MMM Do YYYY');\n}\n}"],"sourceRoot":".."}